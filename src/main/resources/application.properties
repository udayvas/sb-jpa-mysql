server.port=8085
spring.application.name=sb-jpa-mysql
app.logging.appender=consoleAppender
app.logging.level=INFO

#zipkin export
spring.zipkin.enabled=true

# mysql
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/db_example
spring.datasource.username=springuser
spring.datasource.password=ThePassword

# h2 database
spring.h2.console.enabled=false
#spring.h2.console.path=/h2
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true

#kafka
kafka.producer-enabled=true
kafka.bootstrap-servers=localhost:9093
kafka.group-id=customer
kafka.customer-topic-name=CUSTOMER-TOPIC
kafka.max-poll-records-config=5
kafka.number-of-retries-for-producer = 1
kafka.producer-timeout-in-ms=10000
kafka.producer-retry-backoff-in-ms=1000
kafka.concurrency=5
kafka.schema-version-header=v1
kafka.dc=us-east

#kafka ssl
kafka.ssl=false
kafka.truststore-location=/certs/kafka/truststore.jks
kafka.truststore-password=password
kafka.keystore-location=/certs/kafka/keystore.jks
kafka.keystore-password=password

spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer 
spring.kafka.producer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer 

spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer 
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.properties.spring.json.add.type.headers=true

#quartz scheduler
spring.quartz.auto-startup=true
spring.quartz.overwrite-existing-jobs=false

#api specific
spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES=true