
# mysql
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/db_example
spring.datasource.username=springuser
spring.datasource.password=ThePassword

# h2 database
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true

#kafka
kafka.bootstrapAddress=localhost:9093
kafka.topicName=CUSTOMER-TOPIC
kafka.groupId=customer

spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer 
spring.kafka.producer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer 

spring.kafka.consumer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer 
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.properties.spring.json.add.type.headers=true

#quartz scheduler
spring.quartz.auto-startup=true
spring.quartz.overwrite-existing-jobs=false

#api specific
spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES=true